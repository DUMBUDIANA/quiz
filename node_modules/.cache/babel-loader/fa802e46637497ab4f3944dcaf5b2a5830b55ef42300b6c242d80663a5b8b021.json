{"ast":null,"code":"var _jsxFileName = \"/Users/uncommonstudent/Desktop/quiz/src/components/QuizPage.js\",\n  _s = $RefreshSig$();\n// src/components/QuizPage.js\nimport React, { useState } from 'react';\nimport quizData from '../quizData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizPage() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const handleOptionClick = option => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [currentQuestion]: option\n    });\n  };\n  const handleNextQuestion = () => {\n    if (quizData[currentQuestion].answer === selectedOptions[currentQuestion]) {\n      setScore(score + 1);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n  const handlePlayAgain = () => {\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n    setSelectedOptions({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-page\",\n    children: showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have scored \", score, \" out of \", quizData.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayAgain,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: quizData[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: quizData[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option),\n          className: selectedOptions[currentQuestion] === option ? 'selected' : '',\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizPage, \"5W1KdA3Dpv0vrS9SNKgzmsyEgkA=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","quizData","jsxDEV","_jsxDEV","QuizPage","_s","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","selectedOptions","setSelectedOptions","handleOptionClick","option","handleNextQuestion","answer","nextQuestion","length","handlePlayAgain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","map","index","_c","$RefreshReg$"],"sources":["/Users/uncommonstudent/Desktop/quiz/src/components/QuizPage.js"],"sourcesContent":["// src/components/QuizPage.js\nimport React, { useState } from 'react';\nimport quizData from '../quizData';\n\nfunction QuizPage() {\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [score, setScore] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [selectedOptions, setSelectedOptions] = useState({});\n\n    const handleOptionClick = (option) => {\n        setSelectedOptions({ ...selectedOptions, [currentQuestion]: option });\n    };\n\n    const handleNextQuestion = () => {\n        if (quizData[currentQuestion].answer === selectedOptions[currentQuestion]) {\n            setScore(score + 1);\n        }\n\n        const nextQuestion = currentQuestion + 1;\n        if (nextQuestion < quizData.length) {\n            setCurrentQuestion(nextQuestion);\n        } else {\n            setShowScore(true);\n        }\n    };\n\n    const handlePlayAgain = () => {\n        setCurrentQuestion(0);\n        setScore(0);\n        setShowScore(false);\n        setSelectedOptions({});\n    };\n\n    return (\n        <div className=\"quiz-page\">\n            {showScore ? (\n                <div className=\"score-section\">\n                    <p>You have scored {score} out of {quizData.length}</p>\n                    <button onClick={handlePlayAgain}>Play Again</button>\n                </div>\n            ) : (\n                <div className=\"question-section\">\n                    <h2>{quizData[currentQuestion].question}</h2>\n                    <div className=\"options\">\n                        {quizData[currentQuestion].options.map((option, index) => (\n                            <button\n                                key={index}\n                                onClick={() => handleOptionClick(option)}\n                                className={selectedOptions[currentQuestion] === option ? 'selected' : ''}\n                            >\n                                {option}\n                            </button>\n                        ))}\n                    </div>\n                    <button onClick={handleNextQuestion}>Next</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default QuizPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}